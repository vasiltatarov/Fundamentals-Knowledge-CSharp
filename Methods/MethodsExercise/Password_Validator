using System;
using System.ComponentModel;
using System.Linq;
using System.Runtime.ExceptionServices;
using System.Runtime.InteropServices;
using System.Security.Cryptography;
using System.Transactions;

namespace RealWorldExample
{
    class Program
    {
        static void Main(string[] args)
        {
            string password = Console.ReadLine();

            CheckCharacters(password);
            CheckLettersAndDigits(password);
            Console.WriteLine(CheckMinimumTwoDigit(password));
        }

        static void CheckCharacters(string password)
        {
            int passwordLength = password.Length;

            foreach (var item in password)
            {
                if (passwordLength >= 6 && passwordLength <= 10)
                {
                    return;
                    //CheckLettersAndDigits();
                }
                else
                {
                    Console.WriteLine("Password must be between 6 and 10 characters");
                    return;
                }
            }
        }

        static void CheckLettersAndDigits(string password)
        {
            foreach (var item in password)
            {
                if ((item < 97 || item > 122) && (item < 65 || item > 90) && (item < 48 || item > 57))
                {
                    Console.WriteLine("Password must consist only of letters and digits");
                    return;
                }
            }
        }

        static string CheckMinimumTwoDigit(string password)
        {
            int counterMinTwoDigit = 0;
            string result = "Password is valid";
            string invalid = "Password must have at least 2 digits";

            foreach (var item in password)
            {
                if (item >= 48 && item <= 57)
                {
                    counterMinTwoDigit++;
                }
            }

            if (counterMinTwoDigit >= 2)
            {
                return result;
            }
            else
            {
                return invalid;
            }
        }
    }
}

