using System;
using System.Linq;
using System.Collections.Generic;
using System.Threading;
using System.Net.Security;

namespace RealWorldExample
{
    class Program
    {
        static void Main()
        {
            List<int> numbers = Console.ReadLine().Split().Select(int.Parse).ToList();

            int counter = 0;

            while (true)
            {
                List<string> command = Console.ReadLine().Split().ToList();

                if (command[0] == "end")
                {
                    if (counter != 0)
                    {
                        Console.WriteLine(string.Join(" ", numbers));
                        return;
                    }
                    return;
                }
                else if (command[0] == "Contains")
                {
                    int number = int.Parse(command[1]);

                    Contains(numbers, number);
                }
                else if (command[0] == "PrintEven")
                {
                    int evenForLoop = 0;
                    PrintEvenOrrOdd(numbers, evenForLoop);
                }
                else if (command[0] == "PrintOdd")
                {
                    int evenForLoop = 1;
                    PrintEvenOrrOdd(numbers, evenForLoop);
                }
                else if (command[0] == "GetSum")
                {
                    GetSum(numbers);
                }
                else if (command[0] == "Filter")
                {
                    string condition = command[1];

                    int number = int.Parse(command[2]);

                    GetFilter(numbers, condition, number);
                }
                else if (command[0] == "Add")
                {
                    counter++;

                    int number = int.Parse(command[1]);

                    AddNumber(numbers, number);
                }
                else if (command[0] == "Remove")
                {
                    counter++;

                    int number = int.Parse(command[1]);

                    RemoveNumber(numbers, number);
                }
                else if (command[0] == "RemoveAt")
                {
                    counter++;

                    int number = int.Parse(command[1]);

                    RemoveAtNumber(numbers, number);
                }
                else if (command[0] == "Insert")
                {
                    counter++;

                    int number = int.Parse(command[1]);
                    int index = int.Parse(command[2]);

                    InsertNumberIndex(numbers, number, index);
                }
            }
        }

        private static void GetFilter(List<int> numbers, string condition, int number)
        {
            List<int> filterNumbers = new List<int>();

            for (int i = 0; i < numbers.Count; i++)
            {
                if (condition == ">=")
                {
                    if (numbers[i] >= number)
                    {
                        filterNumbers.Add(numbers[i]);
                    }
                }
                else if (condition == "<=")
                {
                    if (numbers[i] <= number)
                    {
                        filterNumbers.Add(numbers[i]);
                    }
                }
                else if(condition == "<")
                {
                    if (numbers[i] < number)
                    {
                        filterNumbers.Add(numbers[i]);
                    }
                }
                else if (condition == ">")
                {
                    if (numbers[i] > number)
                    {
                        filterNumbers.Add(numbers[i]);
                    }
                }

            }

            Console.WriteLine(string.Join(" ", filterNumbers));
        }

        private static void GetSum(List<int> numbers)
        {
            int sum = 0;

            for (int i = 0; i < numbers.Count; i++)
            {
                sum += numbers[i];
            }

            Console.WriteLine(sum);
        }

        private static void PrintEvenOrrOdd(List<int> numbers, int evenForLoop)
        {
            List<int> evenNumbers = new List<int>();

            for (int i = 0; i < numbers.Count; i++)
            {
                if (numbers[i] % 2 == evenForLoop)
                {
                    evenNumbers.Add(numbers[i]);
                }
            }

            Console.WriteLine(string.Join(" ", evenNumbers));
        }

        private static void Contains(List<int> numbers, int number)
        {
            if (numbers.Contains(number))
            {
                Console.WriteLine("Yes");
            }
            else
            {
                Console.WriteLine("No such number");
            }
        }

        private static void AddNumber(List<int> numbers, int number)
        {
            numbers.Add(number);
        }

        private static void RemoveNumber(List<int> numbers, int number)
        {
            numbers.Remove(number);
        }

        private static void RemoveAtNumber(List<int> numbers, int number)
        {
            numbers.RemoveAt(number);
        }

        private static void InsertNumberIndex(List<int> numbers, int number, int index)
        {
            numbers.Insert(index, number);
        }
    }
}
