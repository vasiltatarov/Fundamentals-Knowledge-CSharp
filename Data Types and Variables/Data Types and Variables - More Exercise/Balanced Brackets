You will receive n lines. On those lines, you will receive one of the following:
Opening bracket – “(“,
Closing bracket – “)” or
Random string
Your task is to find out if the brackets are balanced. That means after every closing bracket should follow an opening one.
Nested parentheses are not valid, and if two consecutive opening brackets exist, the expression should be marked as unbalanced. 
You have to print "BALANCED", if the parentheses are balanced and "UNBALANCED" otherwise.

            int n = int.Parse(Console.ReadLine());

            bool isOpened = false;
            bool isClosed = false;
            bool isFailed = true;
            int counter = 0;

            for (int i = 1; i <= n; i++)
            {
                string line = Console.ReadLine();

                if (line == "(")
                {
                    isOpened = true;
                    isClosed = false;
                    counter++;
                }

                if (isOpened && line == ")")
                {
                    if (counter == 1)
                    {
                        isClosed = true;
                        counter = 0;
                    }
                }
                else if (line == ")")
                {
                    isFailed = false;
                }
            }

            if (isClosed && isFailed)
            {
                Console.WriteLine("BALANCED");
            }
            else
            {
                Console.WriteLine($"UNBALANCED");
            }

Input
6
12 *
)
10 + 2 -
( 
5 + 10
)
Output
UNBALANCED            
