Here comes the final and the most interesting part – the Final ranking of the candidate-interns. The final ranking is determined by
the points of the interview tasks and from the exams in SoftUni. Here is your final task. You will receive some lines of input in the
format “{contest}:{password for contest}” until you receive “end of contests”. Save that data because you will need it later.
After that you will receive other type of inputs in format “{contest}=>{password}=>{username}=>{points}” until you receive 
“end of submissions”. Here is what you need to do. 
Check if the contest is valid (if you received it in the first type of input)
Check if the password is correct for the given contest
Save the user with the contest they take part in (a user can take part in many contests) and the points the user has in the given
contest. If you receive the same contest and the same user update the points only if the new ones are more than the older ones.
At the end you have to print the info for the user with the most points in the format “Best candidate is {user} with total
{total points} points.”. After that print all students ordered by their names. For each user print each contest
with the points in descending order. See the examples.
Input
strings in format “{contest}:{password for contest}” until the “end of contests” command.There will be no case with two equal contests
strings in format “{contest}=>{password}=>{username}=>{points}” until the “end of submissions” command.
There will be no case with 2 or more users with same total points!
Output
On the first line print the best user in format “Best candidate is {user} with total {total points} points.”. 
Then print all students ordered as mentioned above in format:
{user1 name}
#  {contest1} -> {points}
#  {contest2} -> {points} 

Part One Interview:success
Js Fundamentals:Pesho
C# Fundamentals:fundPass
Algorithms:fun
end of contests
C# Fundamentals=>fundPass=>Tanya=>350
Algorithms=>fun=>Tanya=>380
Part One Interview=>success=>Nikola=>120
Java Basics Exam=>pesho=>Petkan=>400
Part One Interview=>success=>Tanya=>220
OOP Advanced=>password123=>BaiIvan=>231
C# Fundamentals=>fundPass=>Tanya=>250
C# Fundamentals=>fundPass=>Nikola=>200
Js Fundamentals=>Pesho=>Tanya=>400
end of submissions

Best candidate is Tanya with total 1350 points.
Ranking: 
Nikola
#  C# Fundamentals -> 200
#  Part One Interview -> 120
Tanya
#Js Fundamentals -> 400
#  Algorithms -> 380
#  C# Fundamentals -> 350
#  Part One Interview -> 220

                            //60/100
            var contests = new Dictionary<string, string>();
            var userContests = new SortedDictionary<string, Dictionary<string, int>>();
            var totalPoints = new Dictionary<string, int>();

            string command = Console.ReadLine();
            while (command != "end of contests")
            {
                string[] line = command.Split(":");
                string contest = line[0];
                string password = line[1];

                contests.Add(contest, password);

                command = Console.ReadLine();
            }

            command = Console.ReadLine();
            while (command != "end of submissions")
            {
                string[] line = command.Split("=>");
                string contest = line[0];
                string password = line[1];
                string username = line[2];
                int points = int.Parse(line[3]);

                if (contests.ContainsKey(contest) && contests[contest].Contains(password))
                {
                    if (userContests.ContainsKey(username))
                    {
                        if (!userContests[username].ContainsKey(contest))
                        {
                            userContests[username].Add(contest, points);

                            totalPoints[username] += points;
                        }
                        else if (userContests[username].ContainsKey(contest))
                        {
                            if (userContests[username][contest] < points)
                            {
                                userContests[username][contest] = points;
                            }
                        }
                    }
                    else
                    {
                        userContests.Add(username, new Dictionary<string, int>());
                        userContests[username].Add(contest, points);

                        totalPoints.Add(username, points);
                    }
                }

                command = Console.ReadLine();
            }

            string usernameWithTotalPoints = "";
            int total = 0;

            foreach (var item in totalPoints)
            {
                if (item.Value > total)
                {
                    usernameWithTotalPoints = item.Key;
                    total = item.Value;
                }
            }

            Console.WriteLine($"Best candidate is {usernameWithTotalPoints} with total {total} points.");

            Console.WriteLine("Ranking: ");

            foreach (var item in userContests)
            {
                Console.WriteLine(item.Key);

                foreach (var user in item.Value.OrderByDescending(x => x.Value))
                {
                    Console.WriteLine($"#  {user.Key} -> {user.Value}");
                }
            }
